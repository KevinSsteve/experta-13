
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://qinlsswojrcuvdudlpvf.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFpbmxzc3dvanJjdXZkdWRscHZmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM4ODI1MTAsImV4cCI6MjA1OTQ1ODUxMH0.PvgmJHdjEbwzzg3Je5nYoLb2uZQeWD2qit6iMJ7UFzM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: localStorage
  }
});

// Helper for debugging - logs the current user
export const logCurrentUser = async () => {
  const { data: { user } } = await supabase.auth.getUser();
  console.log("Current user:", user);
  return user;
};

// Busca produtos públicos para sugestões
export const getPublicProducts = async (limit = 20) => {
  try {
    const { data, error } = await supabase
      .from('products')
      .select('*')
      .eq('is_public', true)
      .order('name')
      .limit(limit);
    
    if (error) {
      console.error("Erro ao buscar produtos públicos:", error);
      throw error;
    }
    
    return data;
  } catch (error) {
    console.error("Erro ao buscar produtos públicos:", error);
    return [];
  }
};

// Add a helper function to add a product to user's inventory
export const addProductToInventory = async (product, userId) => {
  if (!userId) {
    throw new Error("User ID is required to add a product to inventory");
  }
  
  const newProduct = {
    ...product,
    user_id: userId,
    is_public: false,
    stock: product.stock || 10
  };
  
  const { data, error } = await supabase
    .from('products')
    .insert([newProduct])
    .select();
    
  if (error) throw error;
  return data;
};
